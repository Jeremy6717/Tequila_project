{% extends "layout.html.twig" %}

{% block header %}
    {% include 'headerReport.html.twig' %}
{% endblock %}

{% block content %}
    {{ parent() }}

    <h3>Products By Category</h3>
    <form action="{{ path ("productsofcategory") }}" method="GET">
        <div class="grid-container">
            <div class="grid-x grid-padding-x footer">
                <div class="large-4 medium-4 small-12 cell">
                    <h5 class="">Select Category</h5>
                    <select name="selectCategory">
                        {% for category in categories %}
                            <option value="{{ category.getId() }}">{{ category.getName() }}</option>
                        {% endfor %}
                    </select>
                </div>
            </div>
        </div>
        <div class="selectSubmit">
            <button class="orderBtn" type="submit">Submit</button>
        </div>
    </form>

    <h5 class="titleSelect">Click on the button to export CSV on your disk</h5>
    <div class="orderBtn">
        <a href="{{ path ("productscsv") }}">Export to CSV</a>
    </div>
    <hr />
    <h3>All Products By Category</h3>

    <div id="responsiveChartCategory">
        <div id="chart_category"></div>
    </div>

    <table border="1">
        <thead>
            <tr>
                <td>CATEGORY ID</td>
                <td>CATEGORY NAME</td>
                <td>PRODUCT ID</td>
                <td>PRODUCT NAME</td>
                <td>PRODUCT DESCRIPTION</td>
                <td>QUANTITY</td>
            </tr>
        </thead>
        <tbody>
            {% for product in products %}
                <tr>
                    <td>{{ product.getCatid().getId() }}</td>
                    <td>{{ product.getCatid().getName() }}</td>
                    <td>{{ product.getId() }}</td>
                    <td>{{ product.getName() }}</td>
                    <td>{{ product.getDescription() }}</td>
                    <td>{{ product.getStock() }}</td>
                </tr>
            {% else %}
            <strong>THE TABLE product IS EMPTY</strong>
        {% endfor %}
    </tbody>
</table>
{% endblock %}

{% block footer %}
    {{ parent() }}

    <!--Load the AJAX API-->
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', {'packages':['corechart']});

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawChart() {

            // Create the data table.
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Category');
            data.addColumn('number', 'Number of items');
            data.addRows([
                {% for product in products %}
                    {% if product.getCatid().getId() == 4 %}
                        ['{{ product.getName() }}', {{ product.getStock() }}],
                    {% endif %}
                {% endfor %}
            ]);
            // Set chart options
            var options = {'title':'number of items per category',
                'width':900,
                'height':500,
                backgroundColor: 'none'
            };

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.PieChart(document.getElementById('chart_category'));
            chart.draw(data, options);
        }
    </script>
{% endblock %}
