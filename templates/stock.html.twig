{# Page : Stock #}

{% extends "layout.html.twig" %}

{% block header %}
    {% include 'headerReport.html.twig' %}
{% endblock %}

{% block content %}
    {{ parent() }}

    <h3>Out of Stock and Low Stock Report</h3>
    
    {# CSV Section #}
    <div class="orderBtn">
        <a href="{{ path ("stockcsv") }}">Export to CSV</a>
    </div>

    {# Table No Stock #}
    <h3> No Stock </h3>

    <table border="1">
        <thead>
        <tr>
            <td> CATEGORY NAME</td>
            <td> PRODUCT ID</td>
            <td> PRODUCT NAME</td>
            <td> QUANTITY</td>
        </tr>
        </thead>
        <tbody>
        {% for product in products %}
            {% if product.stock == 0 %}
                <tr>
                    <td>{{ product.getCatid().getName() }}</td>
                    <td>{{ product.getId() }}</td>
                    <td>{{ product.getName() }}</td>
                    <td>{{ product.getStock() }}</td>
                </tr>
            {% endif %}
        {% endfor %}
        </tbody>
    </table>

    {# Table Low Stock #}
    <h3> Low Stock </h3>

    <table border="1">
        <thead>
        <tr>
            <td> CATEGORY NAME</td>
            <td> PRODUCT ID</td>
            <td> PRODUCT NAME</td>
            <td> QUANTITY</td>

        </tr>
        </thead>
        <tbody>
        {# body of the table generated with the data of the database#}
        {% for product in products %}
            {# condition wich restrict the data sendin for the generation of the chart #}
            {% if product.stock > 0 and product.stock < 3 %}
                <tr>
                    <td>{{ product.getCatid().getName() }}</td>
                    <td>{{ product.getId() }}</td>
                    <td>{{ product.getName() }}</td>
                    <td>{{ product.getStock() }}</td>
                </tr>
            {% endif %}
        {% else %}
            <strong>LA TABLE product EST VIDE</strong>
        {% endfor %}
    </tbody>
</table>

{% endblock %}

{% block footer %}
    {{ parent() }}
    <!----------------------------------Google chart Script---------------------------------------------------->
    <!--Load the AJAX API-->
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', {'packages':['corechart']});

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawChart() {

            // Create the data table.
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Items');
            data.addColumn('number', 'Number of items');
            data.addRows([
                <!--Foreach of the table for filling the chart-->
                {% for product in products %}
                    <!--Condition for selecting the data sending for the chart-->
                    {% if product.stock < 6 %}
                        ['{{ product.getName() }}', {{ product.getStock() }}],
                    {% endif %}

                {% endfor %}
            ]);
            // Set chart options
            var options = {'title':'Stock level of the items',
                width:1300,
                height:1200,
                legend: 'bottom',
                backgroundColor: 'none'
            };



            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.BarChart(document.getElementById('chart_OutOfStock'));
            chart.draw(data, options);
        }
    </script>
{% endblock %}
